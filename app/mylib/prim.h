#ifndef _PRIM_H_
#define _PRIM_H_

#include <time.h>
//#include "NSEnum.h"


void initRand(void);
void memrand(unsigned char *buf, int length);
void BYTEtoSHORT(unsigned char *pbVal, unsigned short *psVal);
void SHORTtoBYTE(unsigned short sVal, unsigned char *pbVal);
void BYTEtoLONG(unsigned char *pbVal, unsigned long *plVal);
void LONGtoBYTE(unsigned long lVal, unsigned char *pbVal);
void PACK3toID(unsigned char *pbVal, long *plVal);
void IDtoPACK3(long lVal, unsigned char *pbVal);
void PACK2toID(unsigned char *pbVal, long *plVal);
void IDtoPACK2(long lVal, unsigned char *pbVal);
void PACK1toID(unsigned char *pbVal, long *plVal);
void IDtoPACK1(long lVal, unsigned char *pbVal);
unsigned short n_htons(unsigned short hVal);
unsigned short n_ntohs(unsigned short nVal);
void s_htons(unsigned short *s, unsigned char *d, int len);
void s_ntohs(unsigned char *s, unsigned short *d, int len);
int	n_atoi(char *digits);
long n_atol(char *digits);
unsigned long n_atou(char *digits);
long n_check_atou(char *digits);
char *n_utoa(unsigned long val, char *digits);
void itoacomma(int value, char *digits);
char *mac2addr(unsigned char *macAddr);
int  addr2mac(char *strMacAddr, unsigned char *macAddr);
char *inet2addr(unsigned char *ipAddr);
int  addr2inet(char *strIpAddr, unsigned char *ipAddr);
int  ipIsNull(unsigned char *addr);
int  ipIsBroadcast(unsigned char *addr);
void ipSetNull(unsigned char *addr);
void ipSetBroadcast(unsigned char *addr);
int  macAddrIsNull(unsigned char *addr);
int  macAddrIsBroadcast(unsigned char *addr);
int  macAddrIsMulticast(unsigned char *addr);
int  macAddrIsValid(unsigned char *addr);
int  checkIpAddr(unsigned char *ip, int subnetmask);
int  validateIpAddress(char *str);
void string_co2db(unsigned char *s, int size, char *d);
void string_db2co(char *s, int size, unsigned char *d);
void c2hex(int c, char *data);
int  hexstr2bin(char *hex_data, unsigned char *bin_data);
void bin2hexstr(unsigned char *bin_data, int size, char *hex_data);
unsigned long hexstr2long(char *hex_data);
void long2hexstr(unsigned long data, int size, char *hex_data);
int  bcdlen(unsigned char *s);
void bcd2string(unsigned char *s, int len, char *d);
void string2bcd(char *s, int len, unsigned char *d);
void string2bcd_nullpad(char *s, int len, unsigned char *d);
void bin2bcd(unsigned char *s, int len, unsigned char *d);
void bcd2bin(unsigned char *s, int len, unsigned char *d);
void char2bcd(unsigned char value, unsigned char *d);
void bcd2char(unsigned char *s, unsigned char *value);
int  bcd2int(unsigned char *s, int len);
void int2bcd(int val, int len, unsigned char *d);
long bcd2long(unsigned char *s);
void long2bcd(long n, unsigned char *d);
void bcdcopy(unsigned char *src, int offset, int len, unsigned char *dst);
void term2addr(int DeviceID, unsigned char *d);
void addr2term(unsigned char *s, int *DeviceID);
void bubble_sort(unsigned long *data, int size);
void memcpy_backward(void *dst, void *src, int length);
void rpad(char *buf, int c, int length);
void memcpy_pad(void *dst, void *src, int size);
void memcpy_padnull(void *dst, void *src, int size);
void memcpy_chop(void *dst, void *src, int size);
int  memtoi(void *buf, int size);
long memtol(void *buf, int size);
void str_chop(char *s);
void strins(char *buf, int index, int c);
void strdel(char *buf, int index);
void strdel_space(void *dst, void *src);
char *strcpy_chr(char *d, char *s, int chr);
char *strcpy_position(char *d, char *s, int n);
char *strlist_position(char *d, char *s, int n);
void strswap(char *st, int chOld, int chNew);
void strcpy_swap(char *dst, char *src, int chOld, int chNew);
int  str_linenum(char *s);
int  isdigits(char *s);
int  iswilddigits(char *s);
int  iswilds(char *s);
void stolower(char *s);
void stoupper(char *s);
void plainstr2password(char *plain, char *pwd);
void plainbcd2password(unsigned char *plain, int len, char *pwd);
void split_wildtoken(char *buf, char *buf1, char *buf2);
char *make_token(char *buf);
char *skip_space(char *buf);
char *read_linestr(char *buf, char *text);
char *read_token(char *buf, char *text);
char *read_token_ch(char *buf, char *text, int ch);
char *read_token_comma(char *buf, char *text);
char *get_profile(char *buf, char *name, char *value);
char *get_keyvalue(char *buf, char *name, char *value);
char *get_keyvalue_space(char *buf, char *key, char *value);
int  file_get_keyvalue(FILE *fp, char *key, char *value);
void file_strcpy_chr(FILE *fp, char *str, int chr);
int  atoi2(char *s);
void utoa2(unsigned int value, char *digits);
void utoab2(unsigned int value, char *digits);
void utoa02(unsigned int value, char *digits);
int  is_hangul(char *buf, int index);
void plain2hidden(char *plain, char *hidden);
void simSeed(unsigned long seed);
unsigned long _Rand(void);
void simRand(void *data, int size);
unsigned short sim16Hashing(unsigned short data1, unsigned short data2);
unsigned short sim16KeyedHashing(unsigned short data1, unsigned short data2, unsigned short key);
void sim16Encrypt(unsigned short *src, int len, unsigned short *dst, unsigned short key);
void sim16Decrypt(unsigned short *src, int len, unsigned short *dst, unsigned short key);
unsigned long sim32Hashing(unsigned long data1, unsigned long data2);
unsigned long sim32KeyedHashing(unsigned long data1, unsigned long data2, unsigned long key);
void sim32Encrypt(unsigned char *src, int len, unsigned char *dst, unsigned long key1, unsigned long key2);
void sim32Decrypt(unsigned char *src, int len, unsigned char *dst, unsigned long key1, unsigned long key2);
int  get_month_days(int year, int mm);
int  get_year_days(int year, int mm, int dd);
void get_mmdd_from_ydays(int year, int yday, int *mm, int *dd);
int  get_week_day(int year, int mm, int dd);
int  get_week_day2(int year, int mm, int dd);
int  get_week_cycle(int dd, int wday);
int  is_holiday(unsigned char *holidays, int yy, int mm, int dd);
void set_holiday(unsigned char *holidays, int yy, int mm, int dd);
void clear_holiday(unsigned char *holidays, int yy, int mm, int dd);
void date_add_day(unsigned char *cdate, int day);
void datetime2longtime(unsigned char *ctm, unsigned long *ltime);
void longtime2datetime(unsigned long ltime, unsigned char *ctm);
void datetime2str(unsigned char *ctm, char *str);
void str2datetime(char *strtime, unsigned char *ctm);
void str2date(char *strtime, unsigned char *ctm);
void str2time(char *strtime, unsigned char *ctm);
int  date_validate(unsigned char *cdate);
int  time_validate(unsigned char *ctime);
int  datetime_validate(unsigned char *cdatetime);
void datetime2bcd(unsigned char *ctm, unsigned char *bcd);
void bcd2datetime(unsigned char *bcd, unsigned char *ctm);
int  datetime_comp(unsigned char *tm1, unsigned char *tm2);
int  date_comp(unsigned char *tm1, unsigned char *tm2);
int  time_comp(unsigned char *tm1, unsigned char *tm2);
int  datetime_diff(unsigned char *tm1, unsigned char *tm2);
int  timesection_check(unsigned char *ctime1, unsigned char *ctime2);
int  timesection_isnull(unsigned char *ctime1, unsigned char *ctime2);
int  timesection_bound(unsigned char *ctime, unsigned char *ctime1, unsigned char *ctime2);
int  BitMaskGet(unsigned char *BitMask, int Index);
void BitMaskSet(unsigned char *BitMask, int Index);
void BitMaskClear(unsigned char *BitMask, int Index);
int  bytegetflag(unsigned char byte, int flag);
void bytesetflag(unsigned char *byte, int flag, int val);
int  bitOneCount(unsigned char *bits, int bitp, int len);
void bitsetzero(unsigned char *bits, int bitp, int len);
void bitsetone(unsigned char *bits, int bitp, int len);
void bitset(unsigned char *bits, int bitp, int val, int len);
void bitcpy(unsigned char *dst, int dstp, unsigned char *src, int srcp, int len);
unsigned char bitreverse(unsigned char byte);
void getTmpRandFileName(char *fileName);


#endif
